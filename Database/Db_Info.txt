CREATE OR REPLACE FUNCTION registrar_bitacora() RETURNS TRIGGER AS $$
BEGIN
	IF (TG_OP = 'INSERT') THEN
		INSERT INTO bitacora_historial_medico (accion, tabla_afectada, id_afectado, columna_afectada, valor_nuevo, usuario)
		VALUES ('INSERT', 'historial_medico', NEW.id, NULL, row_to_json(NEW), CURRENT_USER);
	ELSIF (TG_OP = 'UPDATE') THEN
		INSERT INTO bitacora_historial_medico (accion, tabla_afectada, id_afectado, columna_afectada, valor_anterior, valor_nuevo, usuario)
		VALUES ('UPDATE', 'historial_medico', OLD.id, TG_ARGV[0], row_to_json(OLD -> TG_ARGV[0]), row_to_json(NEW -> TG_ARGV[0]), CURRENT_USER);
	ELSIF (TG_OP = 'DELETE') THEN
		INSERT INTO bitacora_historial_medico (accion, tabla_afectada, id_afectado, columna_afectada, valor_anterior, usuario)
		VALUES ('DELETE', 'historial_medico', OLD.id, NULL, row_to_json(OLD), CURRENT_USER);
	END IF;
	RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER registro_historial_medico
AFTER INSERT OR UPDATE OR DELETE ON historial_medico
FOR EACH ROW
EXECUTE FUNCTION registrar_bitacora();